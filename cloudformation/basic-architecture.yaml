AWSTemplateFormatVersion: "2010-09-09"
Description: Instantiate a basic architecture
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label:
          Default: "VPC Configuration"
          Parameters:
            - VpcCidr
            - PublicSubnetA
            - PrivateSubnetA
            - PublicSubnetB
            - PrivateSubnetB
            - AvailabilityZone1
            - AvailabilityZone2
Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetA:
    Type: String
    Default: 10.0.0.0/24
  PrivateSubnetA:
    Type: String
    Default: 10.0.1.0/24
  PublicSubnetB:
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnetB:
    Type: String
    Default: 10.0.3.0/24
  AvailabilityZone1:
    Type: String
    Default: us-east-1a
  AvailabilityZone2:
    Type: String
    Default: us-east-1b
Resources:
  MyVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: 'Development VPC'
  VpcIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: 'dev-gateway'
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: 'Public Route Table'
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: 'Private Route Table'
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVpc
      InternetGatewayId: !Ref VpcIgw
  MyPublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      VpcId: !Ref MyVpc
      CidrBlock: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: 'Public Subnet A'
  MyPublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone2
      VpcId: !Ref MyVpc
      CidrBlock: !Ref PublicSubnetB
      Tags:
        - Key: Name
          Value: 'Public Subnet B'
  MyPrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      VpcId: !Ref MyVpc
      CidrBlock: !Ref PrivateSubnetA
      Tags:
        - Key: Name
          Value: 'Private Subnet A'
  MyPrivateSubnetB:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Ref AvailabilityZone2
      VpcId: !Ref MyVpc
      CidrBlock: !Ref PrivateSubnetB
      Tags:
        - Key: Name
          Value: 'Private Subnet B'
  PublicSubnetARouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetBRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnetB
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnetARouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnetBRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable
  DevEIPA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref MyVpc
  DevEIPB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref MyVpc
  DevNatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt DevEIPA.AllocationId
      SubnetId: !Ref MyPublicSubnetA
  DevNatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt DevEIPB.AllocationId
      SubnetId: !Ref MyPublicSubnetB
  DevIgwRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref VpcIgw
  DevNatGatewayRouteA:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref DevNatGatewayA
  DevNatGatewayRouteB:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref DevNatGatewayB